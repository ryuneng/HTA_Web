20240109

HTTP 요청방식

1. GET
	- 클라이언트가 서버로 데이터를 요청하기 위해서 사용하는 요청방식 (주로 조회작업에 사용됨)
	- 데이터흐름 : 클라이언트 <----- 서버
	- GET방식 요청의 예시
		1) 웹브라우저의 주소창에 주소를 직접 입력하고 요청하는 경우
		2) 링크를 클릭해서 다른 주소를 요청하는 경우
		3) <form method="get">으로 설정되어 있고, submit 버튼을 클릭해서 값을 제출하는 경우
		   (폼의 입력양식의 값들이 검색조건으로 사용되는 경우)
	- 요청파라미터값의 전송
		> URL에 쿼리스트링을 붙여서 서버에 전송
		> 요청메시지의 헤더부에 데이터를 포함해서 서버로 전송
		> URL에 정보가 그대로 노출되기 때문에 상대적으로 보안에 취약
	- 서버로 전송하는 데이터의 크기에 제한이 있음



2. POST
	- 클라이언트가 서버로 데이터를 전송해서 리소스를 추가하거나 생성하기 위해서 사용하는 요청방식
	- 데이터흐름 : 클라이언트 -----> 서버
	- POST방식 요청의 예시
		: <form method="post">로 설정되어 있고, submit 버튼 클릭해서 값을 제출하는 경우
		  (폼의 입력양식의 값들이 리소스를 추가하거나 생성하기 위해서 사용되는 경우)
	- 요청파라미터값의 전송
		1. 요청메시지의 바디부에 데이터가 포함되어 전달되기 때문에 상대적으로 보안이 우수함
		2. 서버로 전송하는 데이터의 크기에 제한이 없음
		3. enctype에 따라서 서버로 보내는 데이터의 형식이 달라짐
		    1) <form method="post" enctype="application/x-www-form-urlencoded">
		    		- enctype을 설정하지 않았을 때 기본값 : enctype="application/x-www-form-urlencoded"
		    		- 요청메시지의 바디부에 포함되어 서버로 전달되는 값의 형식 : name=value&name=value&name=value
		    		- 첨부파일을 업로드하지 않는 경우 사용
		    
		    2) <form method="post" enctype="multipart/form-data">
		    		- 첨부파일을 업로드하는 경우 사용하는 데이터 전달형식
		    		- 요청메시지의 바디부에 포함되어 서버로 전달되는 값 :
		    		    ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	            Content-Disposition: form-data; name="title"
		 	 
		  	            aaa
		  	            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	            Content-Disposition: form-data; name="description"
		 	 
		  	            bbb
		  	            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	            Content-Disposition: form-data; name="upfiles"; filename="sql-map-2.dtd"
		  	            Content-Type: application/octet-stream
		 	 
		 	 
		  	            ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		    		- 서버로 전달된 요청파라미터값, 첨부파일을 처리하기 위해서는 멀티파트요청을 처리하는 API 혹은 외부 라이브러리를 사용해야 함
		  
		  
		  
3. MIME(Multipurpose Internet Mail Extensions) Type
	- 문서, 파일, 바이트 집합의 성격과 형식을 나타내는 정보
	- MIME 타입의 구조
		> type/subtype
			- MIME타입의 슬래시(/)로 구분된 'type'과 'subtype'으로 구성됨
			- type : text, image, video와 같은 데이터 타입이 속하는 일반적인 카테고리를 나타냄
			- subtype : MIME타입이 나타내는 지정된 타입의 정확한 데이터 종류를 식별함
						text/plain, text/html, text/css
						image/jpg, image/png, image/gif
	- type의 종류
		1) application
			- 모든 종류의 바이너리 데이터
			- 데이터를 어떤 방식으로든 실행하거나 해석하기 위해서 특정 애플리케이션을 사용해야 하는 바이너리 데이터
			- 예시
				application/octet-stream
				application/pdf
				application/zip
		2) text
			- 사람이 읽을 수 있는 텍스트 컨텐츠, 소스코드 또는 쉼표로 구분된 CSV 형태의 데이터와 같은 텍스트 형식의 데이터
			- 예시
				text/plain
				text/csv
				text/html
		3) image
			- 비트맵과 벡터 이미지를 모두 포함하는 이미지 또는 그래픽 애니메이션 데이터
			- 예시
				image/jpeg
				image/png
				image/svg+xml
		4) video
		5) audio
		
	- 주요 MIME타입
		1) application/octet-stream
			- 바이너리 파일을 위한 기본값, '알려지지 않은' 바이너리 파일을 의미함
			- 타입이 알려지지 않은 첨부파일을 다운로드할 때 응답컨텐츠의 타입으로 설정할 수 있음
			
		2) application/x-www-form-urlencoded
			- 브라우저에서 서버로 폼입력값을 전송할 때 요청 메시지의 바디부에 포함된 데이터의 형식을 지정할 때 사용
			- 폼입력값이 아래와 같은 형식으로 포함되어 있음을 나타냄
				name=value&name=value
			
		3) multipart/form-data
			- 브라우저에서 서버로 폼입력값을 전송할 때 요청 메시지의 바디부에 포함된 데이터의 형식을 지정할 때 사용
			- 폼입력값이 아래와 같은 형식으로 포함되어 있음을 나타냄
				------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	    Content-Disposition: form-data; name="title"
		 	 
		  	    aaa
		  	    ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	    Content-Disposition: form-data; name="description"
		 	 
		  	    bbb
		  	    ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	    Content-Disposition: form-data; name="upfiles"; filename="sql-map-2.dtd"
		  	    Content-Type: application/octet-stream
			
		 	 
		  	    ------WebKitFormBoundaryNHRNFTOBhiYA2zcQ
		  	    
		 4) text/plain
		 	- 텍스트 파일에 대한 기본값
		 5) text/css
		 	- 웹페이지의 스타일을 지정하는 CSS파일은 text/css 타입으로 지정되어야 함
		 6) text/html
		 	- 모든 HTML 컨텐츠 타입을 나타냄
		 7) text/javascript
		 	- 자바스크립트를 나타냄
		 8) text/xml
		 	- 모든 XML 컨텐츠 타입을 나타냄
		 	* XML : 서로 다른 시스템 간의 데이터 교환용 문서를 만들 때 사용되는 데이터 표현 형식
		 9) application/json
			- JSON 컨텐츠 타입을 나타냄
			* JSON : 서로 다른 시스템 간의 데이터 교환용 문서를 만들 때 사용되는 데이터 표현 형식 (XML에 비해 경량의 데이터를 교환)
	
	