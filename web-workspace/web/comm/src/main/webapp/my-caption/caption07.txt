20240109
파일 업로드
	1. 파일 업로드 입력폼 작성하기
		<form method="post" action="upload" enctype="multipart/form-data">
		
		</form>
		
		- 요청방식을 post로 설정한다.
		- 요청메시지의 바디부에 포함되는 컨텐츠의 인코딩 방식을 multipart/form-data 로 설정한다.
		
	2. 파일 업로드 필드 작성하기
		<input type="file" name="file1" />
		<input type="file" name="file2" />
		
		혹은
		
		<input type="file" name="files" />
		<input type="file" name="files" />
		
		- 업로드하는 파일을 구분해서 업로드해야 하는 경우에는 첨부파일 입력필드의 이름을 각각 다르게 설정한다.
			예시1)
				도서정보 등록할 때
					상세화면에서 표시할 큰 도서이미지,
					리스트화면에 표시할 작은 이미지,
					상세화면에서 표시할 도서셍사 에미지
			예시2)
				경력사항 등록할 때
					신분증 파일,
					이력서 파일,
					경력증명서 파일,
					자격증 파일
					
		- 업로드하는 파일의 성질이 동일한 것들을 여러개 첨부하는 경우는 입력필드의 이름을 같은 이름으로 설정한다.
			예시)
				SNS에 표시할 이미지를 등록할 때
				경력사항에 해당하는 경력증명서 파일을 여러 개 등록할 때
				자격사항에 해당하는 자격증 파일을 여러 개 등록할 때
				
	3. 업로드된 첨부파일 정보를 테이블에 저장하기
		- 프로젝트에서 제공하는 파일업로드 API를 사용해서 파일명, 파일사이즈, 파일컨텐츠타입, 파일데이터, 읽기전용스트림을 획득할 수 있다.
		- 파일정보 저장에 필요한 정보를 획득해서 테이블에 저장시킨다.
				
	4. 업로드된 첨부파일을 특정 폴더에 저장하기
		- 프로젝트에서 제공하는 파일업로드 API를 사용해서 파일명, 파일사이즈, 파일컨텐츠타입, 파일데이터, 읽기전용스트림을 획득할 수 있다.
		- IOUtils, FileCopyUtils 등을 이용해서 업로드된 첨부파일을 저장시킨다.



20240111
파일 다운로드 처리
	1. 응답메시지에 다운로드되는 파일에 대한 정보를 설정한다.
		1) 응답으로 내려보낼 첨부파일을 표현하는 File객체를 생성한다.
			File file = new File(directory, filename);
			
		2) 응답컨텐츠 타입 설정하기
			response.setContentType("application/octet-stream");
			
		3) 응답컨텐츠 길이 설정하기
			response.setContentLengthLong(file.length( ));
			
		4) 첨부파일의 이름 설정하기(응답메시지의 바디부에 포함된 정보가 첨부파일)
			// 파일명은 utf-8 방식으로 인코딩(변환)한다.(한글 깨짐 방지)
			String encodedFilename = UrlEncoder.encode(filename, "UTF-8")
			// Content-Disposition 응답헤더는 응답메시지의 바디부에 오는 컨텐츠의 특성을 알려준다.
			// attachment; 는 브라우저에서 응답받은 파일을 저장하게 한다.
			// filename=xxxx 는 다운로드되는 파일의 이름을 웹 브라우저에게 알려준다.
			response.setHeader("Content-Disposition", "attachment; filename=" + encodedFilename);
			
		5) 파일 다운로드하기
			// 서버에 저장된 파일(다운로드할 파일)을 읽어오는 읽기전용 스트림을 생성한다.
			InputStream in = new FileInputStream(file);
			// 웹브라우저로 파일데이터를 출력시키는 쓰기전용 스트림을 응답객체에서 획득한다.
			OutputStream out = response.getOutputStream();
			
			IOUtils.copy(in, out);
			
			
			