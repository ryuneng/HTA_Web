20240117 (JS / AJAX)

이벤트 핸들러 등록하기

1. 인라인 이벤트핸들러 등록
	<button onclick="handler()">버튼</button>
	
	function handler() {
		수행문;
	}


2. 엘리먼트 객체의 이벤트 프로퍼티에 이벤트핸들러 등록
	<button id="btn">버튼</button>
	
	// 1. 엘리먼트 조회
	let element = document.getElementById("btn");
	
	// 2. 엘리먼트의 onclick 프로퍼티에 이벤트 핸들러 등록
	element.onclick = function() {
		수행문;
	}
	* 해당 엘리먼트에서 click 이벤트가 발생하면 onclick 프로퍼티에 등록한 함수를 실행한다.
	

3. 엘리먼트 객체의 addEventListener() 메소드를 이용해서 이벤트핸들러 등록
	<button id="btn">버튼</button>
	
	// 1. 엘리먼트 조회
	let element = document.getElementById("btn");
	
	// 2. 엘리먼트의 addEventListener() 메소드를 이용해서 이벤트핸들러 등록
	element.addEventListener("click", function() {
		수행문;
	});
	
	
	
------------------------------------------------------------------------------------------------------------------
서버의 응답컨텐츠 유형

text/html
	- HTML 컨텐츠를 응답컨텐츠로 제공함
	- 웹페이지에 바로 반영할 수 있는 컨텐츠를 제공하는 것
	- AJAX 요청을 보낸 클라이언트측에서는 별도의 작업 없이 응답으로 받은
	  HTML 컨텐츠를 웹 페이지의 특정 영역에 반영시키기만 하면 된다.


text/plain
	- 일반 텍스트 컨텐츠를 응답컨텐츠로 제공함
	- 응답데이터가 매우 단순한 값일 때 사용된다.


text/xml
	- XML 형식의 컨텐츠를 응답컨텐츠로 제공함
	- 응답데이터가 단순한 값이 아닐 때 사용된다.
	
	- XML은 데이터를 저장하거나 전달할 목적으로 만들어졌으며, 데이터의 구조를 기술할 수 있다.
	- XML은 서로 다른 시스템끼리 다양한 종류의 데이터를 손쉽게 교환할 수 있게 한다.


application/json
	- JSON 형식의 컨텐츠를 응답컨텐츠로 제공함
	- 응답데이터가 단순한 값이 아닐 때 사용된다.
	
	- JSON은 XML과 비교해서 더 쉽게 데이터를 저장하고
	  교환하기 위해 설계된 텍스트 기반의 데이터 교환 표준이다.
	- JSON은 자바스크립트를 기반으로 설계되었으며, XML의 대안으로서 고안되었다.
	- JSON은 XML에 비해 경량의 데이터교환 표준이다.
