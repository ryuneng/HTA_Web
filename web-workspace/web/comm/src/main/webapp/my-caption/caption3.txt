20240103

Tomcat의 주요 객체
	ServletContext
	- 웹 애플리케이션 당 하나 생성되는 객체
	- 웹서버가 가동될 때 생성되고, 웹서버가 종료될 때 폐기된다.
	- 웹 애플리케이션과 관련된 설정정보를 포함한다.
	
	HttpSession
	- 클라이언트 당 하나 생성되는 객체
	- 클라이언트마다 고유한 자신의 세션객체가 있다. (인증된 로그인정보를 저장한다.)
	- 로그아웃을 실행하거나, 일정시간이상 웹사이트이용이 없으면 폐기된다.
	
	ServletConfig
	- 서블릿객체 당 하나 생성되는 객체
	- 서블릿과 관련된 설정정보를 포함한다.
	- JSP에서는 사용빈도가 매우 낮다.
	
	HttpServletRequest
	HttpServletResponse
	- HTTP 요청 당 하나 생성되는 객체
	- 요청을 처리하고, 응답이 완료되면 폐기된다. (일회용 객체)
	- 요청메세지, 응답메세지를 담당한다.



----------------------------------------------------------------------------------------------------------------
속성(Attribute)과 스코프(Scope)
1. 속성
    - 웹에서의 속성은 PageContext, HttpServletRequest, HttpSession, ServletContext에 저장되는 객체(값)을 말한다.
    
    - 속성은 name과 value로 구성된다.
        - name의 타입은 String, value의 타입은 Object다.
        - value의 타입이 Object이기 때문에 속성의 값으로는 모든 객체가 가능하다.
        
    - PageContext, HttpServletRequest, HttpSession, ServletContext의 주요 속성관련 API
    	1) void setAttribute(String name, Object value)
    	    - 속성(이름과 값)을 저장한다.
    	2) Object getAttribute(String name)
    	    - 지정된 이름으로 저장된 속성값을 반환한다.
    	3) void removeAttribute(String name)
    	    - 지정된 이름으로 저장된 속성(이름과 값)을 삭제한다.

2. 스코프
    - 속성의 사용(참조)범위
    - 속성을 어느 객체에 저장하느냐에 따라 스코프가 달라진다.
      PageContext
          - 해당 JSP에서만 사용할 수 있다.
      HttpServletRequest
          - 요청과 응답이 완료되기 전까지 사용할 수 없다.
      HttpSession
          - 로그아웃 전까지 사용할 수 있다.
          - 특정 클라이언트만 사용할 수 있다.
      ServletContext
          - 서버가 종료되기 전까지 사용할 수 있다.
          - 모든 서블릿, 모든 JSP, 모든 클라이언트가 사용할 수 있다.



----------------------------------------------------------------------------------------------------------------
절대적으로 로그인할 때만 사용자정보(ID)를 건넬 수 있고, 그 외에는 반드시 전부 SessionID로만 주고받아야 함

인증이 완료된 클라이언트는
- HttpSession객체에 인증된 사용자정보가 보관되어 있다.
- 더이상 자신을 식별하기 위한 정보(사용자번호, 사용자아이디 등)를 서버로 전달할 필요가 없다.
- 자신이 조회하고자 하는 서비스만 요청하면 된다.
  (요청할 때마다 세션아이디가 요청헤더정보에 포함되어 자동으로 서버로 전달된다.)
  
  
  
----------------------------------------------------------------------------------------------------------------
HttpSession객체 생성과 획득

JSP
- JSP는 내장객체로 HttpSession객체를 지원한다.
- jsp 페이지의 스크립틀릿에서는 session참조변수에 저장되어 있는 HttpSession객체를 즉시 사용할 수 있다.
- JSP가 HttpSession객체를 획득/생성하는 방법
		1) 요청객체에 JSESSIONID가 존재하지 않는 경우(보통 첫번째 요청인 경우)
			- HttpSession객체를 생성한다.
			- 참조변수 session에 대입한다.
			- 응답메시지를 보낼 때 새로 생성된 HttpSession객체의 JSESSIONID를 쿠키로 내려보낸다.
			
		2) 요청객체에 JSESSIONID가 존재하는 경우
			2-1) JSESSIONID에 해당하는 HttpSession객체가 검색된다.
					- 참조변수 session에 대입한다.
			
			2-2) JSESSIONID에 해당하는 HttpSession객체가 검색되지 않는다.
			     (장시간 웹을 사용하지 않은 경우, 만료시간 경과로 HttpSession객체가 자동 폐기된 경우)
					- HttpSession객체를 생성한다.
					- 참조변수 session에 대입한다.
					- 응답메시지를 보낼 때 새로 생성된 HttpSession객체의 JSESSIONID를 쿠키로 내려보낸다.
					
- JSP가 내장객체로 HttpSession객체를 지원하지 않도록 설정한다.
		- <%@ page session="false" %>
		- 위와 같이 설정하면 JSP에서 내장객체로 HttpSession객체를 제공하지 않는다.
		- 수동으로 HttpSession객체를 생성/획득하기
				HttpServletRequest API를 사용한다.
						1) HttpSession getSession()
						2) HttpSession getSession(true) -> 주로 login.jsp에서 사용(생성용)
							- 요청객체에 JSESSIONID가 없다.
							 			- HttpSession객체를 새로 생성한다.
							- 요청객체에 JSESSIONID가 있다.
									- JSESSIONID에 해당하는 HttpSession객체가 검색된다.
									    - 검색된 HttpSession객체를 반환한다.
									- JSESSIONID에 해당하는 HttpSession객체가 검색되지 않는다.
									    - HttpSession객체를 새로 생성한다.
									    
						3) HttpSession getSession(false) -> 주로 index.jsp에서 사용(검색용)
						    - 요청객체에 JSESSIONID가 없다.
						    			- null을 반환한다.						    
							- 요청객체에 JSESSIONID가 있다.
									- JSESSIONID에 해당하는 HttpSession객체가 검색된다.
									    - 검색된 HttpSession객체를 반환한다.
									- JSESSIONID에 해당하는 HttpSession객체가 검색되지 않는다.
									    - HttpSession객체를 새로 생성한다.



----------------------------------------------------------------------------------------------------------------
인증(Authentication)과 인가(Authorization)

인증
	- 사용자가 누구인지 확인하는 절차
인가
	- 사용자가 리소스에 대한 접근권한이 있는지 확인하는 절차